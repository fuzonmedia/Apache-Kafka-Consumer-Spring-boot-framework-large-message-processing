package com.consumer.store;

import com.google.cloud.secretmanager.v1.AccessSecretVersionResponse;
import com.google.cloud.secretmanager.v1.SecretManagerServiceSettings;
import com.google.cloud.secretmanager.v1.SecretManagerServiceClient;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.api.gax.core.FixedCredentialsProvider;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;

import javax.annotation.PostConstruct;
import java.util.HashMap;
import java.util.Map;
import java.io.FileInputStream;

@Component
public class SecretService {
    @Autowired
    private Environment env;

    private Map<String, String> secrets = new HashMap<>();

    @PostConstruct
    public void init() throws Exception {
        // GoogleCredentials credentials = GoogleCredentials.fromStream(new FileInputStream(env.getProperty("spring.gcp.credentials")));
        // SecretManagerServiceSettings secretManagerServiceSettings =
        // SecretManagerServiceSettings.newBuilder()
        //     .setCredentialsProvider(FixedCredentialsProvider.create(credentials))
        //     .build();        
        // try (SecretManagerServiceClient client = SecretManagerServiceClient.create(secretManagerServiceSettings)) {
        //     // List all secret names
        //     // ListSecretsResponse response = client.listSecrets("projects/<project_id>");
        //     // for (Secret secret : response.getSecretsList()) {
        //     //     String secretName = secret.getName();
        //     //     AccessSecretVersionResponse secretResponse = client.accessSecretVersion(secretName + "/versions/latest");
        //     //     secrets.put(secretName, new String(secretResponse.getPayload().getData().toByteArray()));
        //     // }
            
        //     // Load a specific secret
        //     AccessSecretVersionResponse response = client.accessSecretVersion(
        //         "projects/tretailb2b-fuzonmedia/secrets/kafka/versions/1");
        //     String secretValue = new String(response.getPayload().getData().toByteArray());
            System.setProperty("secret_name", "secretValue");            
        }
    }

}
